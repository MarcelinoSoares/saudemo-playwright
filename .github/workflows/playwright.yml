name: Playwright Tests

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 1' # Run tests every Monday at midnight

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16, 18, lts/*] # Test on multiple Node.js versions
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm' # Enable caching for npm dependencies

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npx playwright test

      - name: Generate HTML report
        if: always()
        run: npx playwright show-report

      - name: Generate Timestamp
        id: timestamp
        run: |
          echo "time=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV
          echo "time=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT

      - name: Upload Playwright Report
        if: always() # Ensure report is uploaded even if tests fail
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ github.run_id }}-${{ github.run_number }}-${{ github.job }}-${{ steps.timestamp.outputs.time }}
          path: playwright-report/
          retention-days: 30

  deploy-report:
    needs: test
    if: always() && github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Download Playwright Report
        uses: actions/download-artifact@v4
        with:
          path: playwright-report

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./playwright-report
          keep_files: true

  notify:
    needs: [test]
    if: always() && (needs.test.result == 'failure' || needs.test.result == 'cancelled')
    runs-on: ubuntu-latest
    steps:
      - name: Send Slack notification on failure
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "❌ Playwright tests failed in ${{ github.repository }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "❌ *Playwright tests failed in ${{ github.repository }}*"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Workflow:*\n${{ github.workflow }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Job:*\n${{ github.job }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Branch:*\n${{ github.ref_name }}"
                    }
                  ]
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View Workflow Run"
                      },
                      "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
